# [[language]]
# name = "typescript"
# auto-format = false
# formatter = { command = "prettier", args = ["--parser", "typescript"] }
# language-servers = ["typescript-language-server", "eslint"]

# [[language]]
# name = "javascript"
# auto-format = false
# formatter = { command = "prettier", args = ["--parser", "typescript"] }
# language-servers = ["typescript-language-server", "eslint"]

# [[language]]
# name = "tsx"
# auto-format = false
# formatter = { command = "prettier", args = ["--parser", "typescript"] }
# language-servers = ["typescript-language-server", "eslint"]

# [[language]]
# name = "jsx"
# auto-format = false
# formatter = { command = "prettier", args = ["--parser", "typescript"] }
# language-servers = ["typescript-language-server", "eslint"]

# [[language]]
# language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
# name = "typescript"

# [[language]]
# language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
# name = "javascript"

# [[language]]
# language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
# name = "jsx"

# [[language]]
# language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
# name = "tsx"

# [language-server.eslint]
# command = "vscode-eslint-language-server"
# args = ["--stdio"]

# [language-server.eslint.config]
# validate = "on"
# experimental = { useFlatConfig = false }
# rulesCustomizations = []
# run = "onType"
# problems = { shortenToSingleLine = false }
# nodePath = ""

# [language-server.eslint.config.codeAction]
# disableRuleComment = { "enable" = true, "location" = "sameLine" }
# showDocumentation = { "enable" = true }
# mode = "all"

# --------

[[language]]
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
name = "typescript"
auto-format = true

[[language]]
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
name = "javascript"
auto-format = true

[[language]]
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
name = "jsx"
auto-format = true

[[language]]
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
name = "tsx"
auto-format = true

[[language]]
name = "html"
auto-format = true

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"

[language-server.eslint.config.codeAction]
[language-server.eslint.config.codeAction.disableRuleComment]
enable = true
location = "separateLine"

[language-server.eslint.config.codeAction.showDocumentation]
enable = true

[language-server.eslint.config.codeActionOnSave]
enable = true
mode = "all"

[language-server.eslint.config.workingDirectory]
mode = "location"

[language-server.typescript-language-server]
args = ["--stdio"]
command = "typescript-language-server"

[language-server.typescript-language-server.config]
documentFormatting = false

